import Head from "next/head";
import React from "react";
import type { GetServerSidePropsContext } from "next";
import type { Stripe } from "stripe";

type Props = {
  data: {
    invoice: {
      amount_paid: number;
    };
  };
};

type WidgetProps = {
  amount_paid: number;
  customer: string;
};

const PaymentWidget = (props: WidgetProps) => {
  return (
    <div className="flex h-auto w-[250px] flex-col rounded-lg bg-white p-4 shadow-md">
      <div className="flex w-full flex-row justify-between">
        <span className="text-xl font-semibold">{props.customer}</span>
        {props.amount_paid > 0 ? (
          <span className="min-w-10 rounded-lg border-2 border-green-700 bg-green-400 p-1 px-2 text-sm font-bold text-white">
            Paid
          </span>
        ) : (
          <span className="h-fit rounded-lg border-2 border-red-700 bg-red-400 p-1 text-sm font-bold text-white">
            Unpaid
          </span>
        )}
      </div>
      <div className="my-4 flex w-full flex-row justify-start">
        <div className="flex flex-col">
          <span>Invoice #1234</span>
          <span className="text-4xl font-bold">$60,00</span>
        </div>
      </div>
      <div className="mb-4 flex w-full flex-row justify-center">
        <ol className="flex w-full items-center">
          <li className="flex w-full items-center text-green-600 after:inline-block after:h-1 after:w-full after:border-4 after:border-b after:border-green-100 after:content-[''] dark:text-green-500 dark:after:border-green-800">
            <span className="flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-green-100 lg:h-12 lg:w-12 dark:bg-green-800">
              <svg
                className="h-3.5 w-3.5 text-green-600 lg:h-4 lg:w-4 dark:text-green-300"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 16 12"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M1 5.917 5.724 10.5 15 1.5"
                />
              </svg>
            </span>
          </li>
          <li className="flex w-full items-center text-green-600 after:inline-block after:h-1 after:w-full after:border-4 after:border-b after:border-green-100 after:content-[''] dark:text-green-500 dark:after:border-green-800">
            <span className="flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-green-100 lg:h-12 lg:w-12 dark:bg-gray-700">
              <svg
                className="h-3.5 w-3.5 text-green-600 lg:h-4 lg:w-4 dark:text-green-300"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 20 16"
              >
                <path d="M18 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2ZM6.5 3a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5ZM3.014 13.021l.157-.625A3.427 3.427 0 0 1 6.5 9.571a3.426 3.426 0 0 1 3.322 2.805l.159.622-6.967.023ZM16 12h-3a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Z" />
              </svg>
            </span>
          </li>
          <li className="flex w-full items-center">
            <span className="flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-green-100 lg:h-12 lg:w-12 dark:bg-gray-700">
              <svg
                className="h-3.5 w-3.5 text-green-600 lg:h-4 lg:w-4 dark:text-green-300"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 18 20"
              >
                <path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2ZM7 2h4v3H7V2Zm5.7 8.289-3.975 3.857a1 1 0 0 1-1.393 0L5.3 12.182a1.002 1.002 0 1 1 1.4-1.436l1.328 1.289 3.28-3.181a1 1 0 1 1 1.392 1.435Z" />
              </svg>
            </span>
          </li>
        </ol>
      </div>
      <div className="flex w-full flex-row justify-center">
        <svg
          width="250"
          height="34"
          viewBox="0 0 250 34"
          fill="none"
          className="w-[120px]"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M8.6 4.54102H0V26.061H3.84V17.741H8.6C13.4 17.741 16.4 15.421 16.4 11.141C16.4 6.86102 13.4 4.54102 8.6 4.54102ZM8.4 14.541H3.84V7.94102H8.46C11.22 7.94102 12.68 9.12102 12.68 11.241C12.68 13.361 11.16 14.441 8.46 14.441L8.4 14.541Z"
            fill="#635BFF"
          />
          <path
            d="M24.66 10.0611C23.6086 10.0489 22.5662 10.2568 21.5999 10.6714C20.6336 11.086 19.7647 11.6981 19.049 12.4684C18.3332 13.2387 17.7866 14.1503 17.444 15.1444C17.1015 16.1386 16.9707 17.1934 17.06 18.2411C16.9663 19.2945 17.0928 20.356 17.4317 21.3578C17.7705 22.3597 18.3142 23.2801 19.0281 24.0604C19.7421 24.8407 20.6106 25.4638 21.5785 25.8901C22.5464 26.3164 23.5924 26.5366 24.65 26.5366C25.7076 26.5366 26.7537 26.3164 27.7216 25.8901C28.6895 25.4638 29.558 24.8407 30.2719 24.0604C30.9859 23.2801 31.5296 22.3597 31.8684 21.3578C32.2072 20.356 32.3338 19.2945 32.24 18.2411C32.3323 17.1944 32.2042 16.14 31.8641 15.1459C31.5239 14.1518 30.9792 13.2399 30.265 12.4692C29.5508 11.6985 28.6831 11.0861 27.7177 10.6713C26.7523 10.2565 25.7107 10.0486 24.66 10.0611ZM24.66 23.4011C22.22 23.4011 20.66 21.4011 20.66 18.2411C20.66 15.0811 22.18 13.0811 24.66 13.0811C27.14 13.0811 28.66 15.0811 28.66 18.2411C28.66 21.4011 27.08 23.3811 24.66 23.3811V23.4011Z"
            fill="#635BFF"
          />
          <path
            d="M48.0199 20.7603L45.1999 10.3203H42.2399L39.4399 20.7603L36.5999 10.3203H32.8999L37.6399 26.0803H40.7599L43.6399 15.7603L46.5199 26.0803H49.6399L54.3799 10.3203H50.8199L48.0199 20.7603Z"
            fill="#635BFF"
          />
          <path
            d="M62.4599 10.0605C61.4222 10.0798 60.3992 10.3098 59.4531 10.7364C58.507 11.1631 57.6575 11.7776 56.9561 12.5426C56.2547 13.3075 55.7161 14.2071 55.3729 15.1866C55.0298 16.1661 54.8892 17.2051 54.9599 18.2405C54.8763 19.292 55.0131 20.3494 55.3615 21.345C55.7099 22.3405 56.2622 23.2525 56.9832 24.0224C57.7042 24.7923 58.5779 25.4033 59.5485 25.8162C60.5191 26.2292 61.5652 26.435 62.6199 26.4205C64.0699 26.4987 65.5079 26.12 66.7314 25.3378C67.9548 24.5557 68.9021 23.4094 69.4399 22.0605L66.4599 20.8205C66.226 21.5934 65.7364 22.2638 65.0713 22.7217C64.4063 23.1796 63.6053 23.3978 62.7999 23.3405C62.2262 23.3542 61.6557 23.2514 61.123 23.0381C60.5902 22.8248 60.1063 22.5057 59.7005 22.0999C59.2948 21.6941 58.9756 21.2102 58.7623 20.6775C58.5491 20.1447 58.4462 19.5742 58.4599 19.0005H69.4999V17.8005C69.5399 13.4805 67.0999 10.0605 62.4599 10.0605ZM58.5999 16.3205C58.7401 15.4022 59.2085 14.5657 59.9182 13.9663C60.628 13.3669 61.531 13.0451 62.4599 13.0605C62.9012 13.0232 63.3454 13.0803 63.763 13.228C64.1806 13.3757 64.5619 13.6106 64.8817 13.9171C65.2014 14.2236 65.4522 14.5947 65.6174 15.0056C65.7827 15.4166 65.8585 15.858 65.8399 16.3005L58.5999 16.3205Z"
            fill="#635BFF"
          />
          <path
            d="M75.84 12.6615V10.3215H72.24V26.0615H75.84V17.8015C75.8079 17.2678 75.8894 16.7334 76.0791 16.2336C76.2687 15.7337 76.5623 15.2798 76.9403 14.9018C77.3183 14.5237 77.7723 14.2302 78.2721 14.0405C78.7719 13.8509 79.3063 13.7694 79.84 13.8015C80.2794 13.7704 80.7205 13.7704 81.16 13.8015V10.2014C80.88 10.2014 80.56 10.2014 80.14 10.2014C79.2628 10.156 78.3911 10.3637 77.6287 10.7999C76.8663 11.2361 76.2454 11.8823 75.84 12.6615Z"
            fill="#635BFF"
          />
          <path
            d="M89.4198 10.0605C88.3822 10.0798 87.3592 10.3098 86.4131 10.7364C85.467 11.1631 84.6174 11.7776 83.9161 12.5426C83.2147 13.3075 82.676 14.2071 82.3329 15.1866C81.9897 16.1661 81.8492 17.2051 81.9198 18.2405C81.8362 19.292 81.973 20.3494 82.3214 21.345C82.6698 22.3405 83.2222 23.2525 83.9432 24.0224C84.6641 24.7923 85.5379 25.4033 86.5085 25.8162C87.479 26.2292 88.5251 26.435 89.5798 26.4205C91.0166 26.4816 92.4368 26.0949 93.6442 25.3139C94.8516 24.5328 95.7865 23.396 96.3198 22.0605L93.2398 20.8805C93.006 21.6534 92.5163 22.3238 91.8513 22.7817C91.1862 23.2396 90.3853 23.4578 89.5798 23.4005C89.0179 23.3954 88.4626 23.2786 87.9462 23.0569C87.4298 22.8353 86.9626 22.5131 86.5718 22.1093C86.181 21.7055 85.8743 21.228 85.6697 20.7046C85.4651 20.1812 85.3666 19.6224 85.3798 19.0605H96.4598V17.8605C96.4598 13.4805 93.9798 10.0605 89.4198 10.0605ZM85.5598 16.3205C85.7039 15.4093 86.1713 14.5803 86.8764 13.9854C87.5816 13.3904 88.4773 13.0692 89.3998 13.0805C89.8412 13.0432 90.2854 13.1003 90.703 13.248C91.1205 13.3957 91.5019 13.6306 91.8216 13.9371C92.1414 14.2436 92.3922 14.6147 92.5574 15.0257C92.7226 15.4366 92.7984 15.878 92.7798 16.3205H85.5598Z"
            fill="#635BFF"
          />
          <path
            d="M109.58 12.061C109.025 11.4098 108.33 10.8918 107.548 10.5456C106.765 10.1994 105.915 10.0338 105.06 10.061C100.64 10.061 98.1199 13.761 98.1199 18.241C98.1199 22.721 100.64 26.421 105.06 26.421C105.916 26.4527 106.767 26.2891 107.551 25.9425C108.334 25.596 109.028 25.0757 109.58 24.421V26.061H113.18V4.54102H109.58V12.061ZM109.58 18.761C109.661 19.3313 109.617 19.9122 109.453 20.4642C109.288 21.0161 109.006 21.526 108.626 21.959C108.247 22.3919 107.778 22.7378 107.252 22.9729C106.726 23.2079 106.156 23.3267 105.58 23.321C102.96 23.321 101.58 21.321 101.58 18.281C101.58 15.241 102.98 13.241 105.58 13.241C107.8 13.241 109.58 14.861 109.58 17.821V18.761Z"
            fill="#635BFF"
          />
          <path
            d="M133.08 10.061C132.209 10.0229 131.34 10.1831 130.54 10.5296C129.739 10.876 129.028 11.3997 128.46 12.061V4.54102H124.86V26.061H128.46V24.401C129.018 25.0538 129.716 25.5726 130.502 25.9188C131.288 26.2651 132.142 26.4299 133 26.401C137.4 26.401 139.92 22.681 139.92 18.221C139.92 13.761 137.48 10.061 133.08 10.061ZM132.46 23.261C131.884 23.2667 131.314 23.1479 130.788 22.9129C130.262 22.6778 129.793 22.3319 129.413 21.899C129.034 21.466 128.752 20.9561 128.587 20.4042C128.423 19.8522 128.379 19.2713 128.46 18.701V17.761C128.46 14.801 130.14 13.181 132.46 13.181C135.06 13.181 136.46 15.181 136.46 18.221C136.46 21.261 134.96 23.261 132.46 23.261Z"
            fill="#635BFF"
          />
          <path
            d="M148.32 21.3803L144.46 10.3203H140.66L146.46 25.5003L145.86 26.9803C145.758 27.4874 145.463 27.9352 145.038 28.2298C144.613 28.5244 144.091 28.6429 143.58 28.5603C143.18 28.5895 142.779 28.5895 142.38 28.5603V31.5803C142.863 31.6522 143.351 31.6856 143.84 31.6803C145.089 31.7711 146.329 31.4203 147.346 30.6891C148.362 29.958 149.089 28.893 149.4 27.6803L155.88 10.4403H152.1L148.32 21.3803Z"
            fill="#635BFF"
          />
          <path
            d="M224.46 6.92002C223.67 6.91546 222.887 7.06681 222.156 7.36539C221.425 7.66398 220.761 8.10393 220.2 8.66002L219.92 7.28002H215.14V33.12L220.58 31.94V25.68C221.662 26.5861 223.029 27.0818 224.44 27.08C228.32 27.08 231.88 23.9 231.88 16.86C231.88 10.42 228.28 6.92002 224.46 6.92002ZM223.16 22.18C222.683 22.2075 222.205 22.1285 221.763 21.9486C221.32 21.7687 220.923 21.4925 220.6 21.14V12.92C220.924 12.5547 221.326 12.2663 221.775 12.076C222.225 11.8857 222.712 11.7982 223.2 11.82C225.2 11.82 226.56 14.08 226.56 16.98C226.56 19.88 225.18 22.18 223.16 22.18Z"
            fill="#635BFF"
          />
          <path
            d="M241.92 6.91992C236.68 6.91992 233.5 11.4399 233.5 17.1399C233.5 23.8799 237.26 27.2999 242.62 27.2999C244.712 27.334 246.778 26.8314 248.62 25.8399V21.3399C246.947 22.1841 245.094 22.6096 243.22 22.5799C241.06 22.5799 239.22 21.7999 238.94 19.1799H249.7C249.7 18.8799 249.7 17.6999 249.7 17.1799C249.88 11.4399 247.16 6.91992 241.92 6.91992ZM238.98 15.0599C238.98 12.5399 240.52 11.4799 241.88 11.4799C243.24 11.4799 244.68 12.5399 244.68 15.0599H238.98Z"
            fill="#635BFF"
          />
          <path
            d="M200.46 8.7806L200.12 7.1406H195.48V26.5606H200.84V13.4006C201.324 12.8129 201.976 12.3869 202.709 12.1796C203.441 11.9724 204.22 11.9936 204.94 12.2406V7.1406C204.122 6.82007 203.215 6.80989 202.389 7.11197C201.564 7.41406 200.878 8.00756 200.46 8.7806Z"
            fill="#635BFF"
          />
          <path
            d="M173.38 12.9807C173.38 12.1007 174.1 11.7607 175.24 11.7607C177.129 11.8014 178.981 12.2953 180.64 13.2007V7.94075C178.925 7.24733 177.09 6.90066 175.24 6.92075C170.82 6.92075 167.88 9.28075 167.88 13.2407C167.88 19.4407 176.16 18.4407 176.16 21.1007C176.16 22.1407 175.28 22.4807 174.16 22.4807C172.047 22.3573 169.992 21.7408 168.16 20.6807V26.0607C170.048 26.9029 172.092 27.339 174.16 27.3407C178.68 27.3407 181.8 25.0407 181.8 21.0207C181.7 14.3007 173.38 15.5007 173.38 12.9807Z"
            fill="#635BFF"
          />
          <path
            d="M189.02 2.54102L183.72 3.70102V21.561C183.693 22.3137 183.819 23.064 184.092 23.7662C184.364 24.4683 184.777 25.1076 185.305 25.6448C185.833 26.182 186.464 26.606 187.162 26.8907C187.859 27.1755 188.607 27.3151 189.36 27.301C190.674 27.3598 191.983 27.1062 193.18 26.561V22.061C192.48 22.361 189.06 23.381 189.06 20.061V12.061H193.18V7.38102H189.06L189.02 2.54102Z"
            fill="#635BFF"
          />
          <path
            d="M206.96 5.46L212.42 4.32V0L206.96 1.14V5.46Z"
            fill="#635BFF"
          />
          <path
            d="M212.42 7.28125H206.96V26.5613H212.42V7.28125Z"
            fill="#635BFF"
          />
        </svg>
      </div>
    </div>
  );
};

export default function Home(props: Props) {
  // useEffect(() => {
  //   const invoices = listInvoices();
  // }, []);
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="p-4">
        <PaymentWidget
          amount_paid={props.data.invoice.amount_paid}
          customer="Nancy Cueva"
        />
      </main>
    </>
  );
}

export const getServerSideProps = async (
  context: GetServerSidePropsContext,
) => {
  const { query } = context;
  const { id } = query;

  const invoice = await fetch(
    `https://stripe-embeds.vercel.app/api/invoice/${id as string}`,
  );

  const json = (await invoice.json()) as { invoice: Stripe.Invoice };

  const data = {
    invoice: {
      amount_paid: json.invoice.amount_paid,
    },
  };

  console.log(data);
  return {
    props: {
      data,
    },
  };
};
